<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 파일이름 대신 namespace 이름을 불러서 사용 -->

<mapper namespace="com.itwillbs.mappers.releaseMapper">
	
	<insert id="insertrel">
	insert into release_schedule(rel_schedule_cd, wh_cd, product_cd_name, rel_date, remarks, out_complete, rel_count,pchor_cd) 
	values(#{rel_schedule_cd}, #{wh_cd}, #{product_cd_name}, #{rel_date},#{remarks}, #{out_complete}, #{rel_count}, #{pchor_cd})
	</insert>
	
<!-- 	출고코드번호 -->
	<select id="getLNum" resultType="java.lang.Integer">
	select max(SUBSTR(rel_schedule_cd, 2)) from release_schedule where rel_schedule_cd like 'L%'
	</select>

<!-- 조인 리스트	 -->
<!-- insert페이지 -->


<!-- 메인페이지 -->
	<resultMap type="map" id="map2">
		<result column="rel_schedule_cd"  property="rel_schedule_cd"/>
		<result column="business_name"  property="business_name"/>
		<result column="emp_name"  property="emp_name"/>
		<result column="product_name"  property="product_name"/>
		<result column="rel_date"  property="rel_date"/>
		<result column="rel_count"  property="rel_count"/>
		<result column="out_complete"  property="out_complete"/>
		<result column="remarks"  property="remarks"/>
	</resultMap>
	
	<select id="getRelList" resultMap="map2">
	select r.rel_schedule_cd, w.wh_name, p.product_name, r.rel_date, r.rel_count, r.out_complete, r.remarks
		   from release_schedule as r
		   left join product as p
		   on r.product_cd_name = p.product_cd_name
		   left join warehouse as w
		   on r.wh_cd = w.wh_cd
        <if test="search != null">
        <if test="select != null">
<!-- 			<if test="select == 'business_name'.toString()"> -->
<!-- 				where business_name like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
			<if test="select == 'wh_name'.toString()">
				where wh_name like CONCAT('%',#{search},'%')
			</if>
			<if test="select == 'product_name_cd'.toString()">
				where product_name like CONCAT('%',#{search},'%')
			</if>
        </if>
        </if>
        order by rel_schedule_cd desc 
        limit #{startRow}, #{pageSize}   	
    </select>
<!-- 	페이징 -->
	<select id="getRelCount" resultType="java.lang.Integer">
        select count(*) from release_schedule
        <if test="search != null">
        <if test="select != null">
        	<if test="select == 'business_name'.toString()">
				where business_name like CONCAT('%',#{search},'%')
			</if>
			<if test="select == 'wh_name'.toString()">
				where wh_name like CONCAT('%',#{search},'%')
			</if>
			<if test="select == 'product_name'.toString()">
				where product_name like CONCAT('%',#{search},'%')
			</if>
        </if>
        </if> 
    </select>
	
    <delete id="deleterel">
    delete from release_schedule
    where rel_schedule_cd = #{rel_schedule_cd}       
    </delete> 
    
    <select id="getrel" resultType="com.itwillbs.domain.ReleaseDTO">
        select * from release_schedule
        where rel_schedule_cd = #{rel_schedule_cd}
    </select>
    
     <update id="updaterel">
	 	update release_schedule set rec_schedule_cd = #{rec_schedule_cd},wh_cd = #{wh_cd}, product_cd_name = #{product_cd_name}, pchor_cd = #{pchor_cd}, 
	 	                            rel_date = #{rel_date}, remarks = #{remarks}, out_complete = #{out_complete},
	 	                            rel_count = #{rel_count}
	 	where rel_schedule_cd = #{rel_schedule_cd}                     
    </update>
    
	<select id="getRel_cd" resultType="java.lang.String">
			select *  
			from release_schedule
			order by rel_schedule_cd desc
			limit 1
		</select>
    
   
    
    
    
</mapper>



