<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 파일이름 대신 namespace 이름을 불러서 사용 -->

<mapper namespace="com.itwillbs.mappers.instructionMapper">
	
	<!-- ?대신 memberDTO의 멤버변수명 사용 #{id}-->
<!-- 	<insert id="memberinsertpro"> -->
<!-- 		insert into employees(emp_no,dept_cd,grade_cd,priv_cd,emp_name,emp_pass)  -->
<!-- 		values(#{emp_no},#{dept_cd},#{grade_cd},#{priv_cd},#{emp_name},#{emp_pass}) -->
<!-- 	</insert> -->

<!-- 	<select id="getMaxEmp_no" resultType="java.lang.Integer"> -->
<!-- 		select max(emp_no) from employees -->
<!-- 	</select> -->

	
	
	
	 <select id="getorderlist" resultType="com.itwillbs.domain.OrderDTO">
    	select * from order_management
    	<if test="search != null">
    	where order_cd like CONCAT('%',#{search},'%')
    	</if>
    	limit #{startRow},#{pageSize}	
    </select>
	

	<resultMap type="map" id="map2">
		<!-- column="DB의 열이름" property="해당 DB열에 대해 저장할 변수이름"-->
		<result column="order_cd" property="order_cd"/>
		<result column="business_cd" property="business_cd"/>
		<result column="product_cd_name" property="product_cd_name"/>
		<result column="order_count" property="order_count"/>
		<result column="order_date" property="order_date"/>
		<result column="deliver_date" property="deliver_date"/>
		<result column="emp_no" property="emp_no"/>
		<result column="cproduct_name" property="cproduct_name"/>
		<result column="rproduct_cd_name" property="rproduct_cd_name"/>
		<result column="rproduct_name" property="rproduct_name"/>
		<result column="consumption" property="consumption"/>
		<result column="consumption_unit" property="consumption_unit"/>
		<result column="order_cd" property="order_cd"/>
	</resultMap>

	<select id="getOrderListMap" resultMap="map2">
    	SELECT o.order_cd, o.business_cd, o.product_cd_name, o.order_count, o.order_date, o.deliver_date, o.emp_no,c.cproduct_name, c.rproduct_cd_name, c.rproduct_name, c.consumption, c.consumption_unit
		FROM order_management o right join consumption_management c 
		ON o.product_cd_name = c.cproduct_cd_name
		where o.order_cd is not null and o.con = '생산전'
    </select>
	
	<select id="getordercount" resultType="java.lang.Integer">
        SELECT count(*)
		FROM order_management o right join consumption_management c 
		ON o.product_cd_name = c.cproduct_cd_name
		where o.order_cd is not null and o.con = '생산전'
    </select>

    <select id="orderinfo" resultType="com.itwillbs.domain.OrderDTO">
        select *
        from order_management
        where order_cd = #{order_cd}
    </select>
    
    <insert id="instinsertpro">
 		insert into instruction(instruction_code, line_cd, product_cd_name, order_cd, instruction_state, instruction_date, instruction_qt)
		values(#{instruction_code}, #{line_cd}, #{product_cd_name}, #{order_cd}, #{instruction_state}, #{instruction_date}, #{instruction_qt})
    </insert>
    
    <select id="instructioninfo" resultType="com.itwillbs.domain.InstructionDTO">
        select *
        from instruction
        where instruction_code = #{instruction_code}
    </select>
    
     <update id="instupdatepro">
     	update instruction set order_cd = #{order_cd}, product_cd_name = #{product_cd_name}, instruction_qt = #{instruction_qt}, line_cd = #{line_cd}, instruction_date = #{instruction_date}, instruction_state = #{instruction_state}
     	where instruction_code = #{instruction_code}
    </update>
    
     <delete id="instdelete">
    	delete from instruction
    	where instruction_code = #{instruction_code}
    </delete>
    
 	 <select id="instructionlist" resultType="com.itwillbs.domain.InstructionDTO">
    	select * from instruction
    	<if test="search != null">
    	where order_cd like CONCAT('%',#{search},'%')
    	</if>
    	limit #{startRow},#{pageSize}	
    </select>
	
	<select id="getinstructioncount" resultType="java.lang.Integer">
        select count(*) from instruction
        <if test="search != null">
    	where order_cd like CONCAT('%',#{search},'%')
    	</if>
    </select>
 

 	<resultMap type="map" id="map1">
		<result column="order_cd" property="order_cd"/>
		<result column="product_cd_name" property="product_cd_name"/>
	</resultMap>

    <select id="getInstMap" resultMap="map1">
    	select order_cd, product_cd_name from instruction
    </select>
 
	<select id="getInst" resultMap="map1">
    	select order_cd, product_cd_name from instruction
    	where instruction_code = #{instruction_code}
    </select>

	<select id="getordercheck" resultType="java.lang.Integer">
    	select count(*)
    	from(select order_cd
    	from order_management
    	where order_cd = #{order_cd}) a
    </select>
    
    
    
    
    
    
<!-- 	<select id="userCheck" resultType="com.itwillbs.domain.MemberDTO"> -->
<!-- 		select * from members  -->
<!-- 		where id = #{id} and pass = #{pass}  -->
<!-- 	</select> -->

<!-- 	<select id="selectBlog" parameterType="int" resultType="Blog">
        select * from Blog where id = #{id}
    </select>
    
    <insert id="">
    </insert>
    
    <update id="">
    </update>
    
    <delete id="">
    </delete> -->
    
</mapper>
