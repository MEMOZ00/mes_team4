<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 파일이름 대신 namespace 이름을 불러서 사용 -->

<mapper namespace="com.itwillbs.mappers.receiveMapper">
	
	<!-- ?대신 productDTO의 멤버변수명 사용 #{id}-->
	<insert id="insertReceive">
		insert into receive_schedule
		values(#{rec_schedule_cd},#{wh_cd},#{pchor_cd},#{product_cd_name},#{rec_count},#{rec_date},#{in_complete})
	</insert>
	
	<select id="getReceiveList" resultType="com.itwillbs.domain.ReceiveDTO">
        select * from receive_schedule
        order by rec_schedule_cd    	
    </select>
	
	<select id="getReceiveCount" resultType="java.lang.Integer">
        select count(*) from receive_schedule 
    </select>
    
    <!-- 	입고코드번호 -->
	<select id="getCNum" resultType="java.lang.Integer">
	select max(SUBSTR(rec_schedule_cd, 2)) from receive_schedule where rec_schedule_cd like 'C%'
	</select>
<!-- 	<resultMap type="map" id="map1"> -->
<!-- 		<result column="business_cd" property="business_cd"/> -->
<!-- 	</resultMap> -->
	
<!-- 	<select id="getInstMap" resultMap="map1"> -->
<!-- 		select business_cd from business -->
<!-- 	</select> -->
	
<!-- 	<resultMap type="map" id="map2"> -->
<!-- 		<result column="product_dv"  property="product_dv"/> -->
<!-- 		<result column="product_cd_name"  property="product_cd_name"/> -->
<!-- 		<result column="product_name"  property="product_name"/> -->
<!-- 		<result column="business_cd"  property="business_cd"/> -->
<!-- 		<result column="business_name"  property="business_name"/> -->
<!-- 		<result column="product_size"  property="product_size"/> -->
<!-- 		<result column="product_unit"  property="product_unit"/> -->
<!-- 		<result column="remarks"  property="remarks"/> -->
<!-- 	</resultMap> -->
	
<!-- 	<select id="getProductList" resultMap="map2"> -->
<!--         select p.product_dv,p.product_cd_name, p.product_name, b.business_cd, b.business_name, p.product_size, p.product_unit, p.remarks -->
<!--         from product p join business b -->
<!--         on p.business_cd=b.business_cd -->
<!--         <if test="search != null"> -->
<!--         <if test="select != null"> -->
<!-- 			<if test="select == 'product_dv'.toString()"> -->
<!-- 				where product_dv like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
<!-- 			<if test="select == 'product_cd_name'.toString()"> -->
<!-- 				where product_cd_name like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
<!-- 			<if test="select == 'product_name'.toString()"> -->
<!-- 				where product_name like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
<!--         </if> -->
<!--         </if> -->
        
<!--         order by product_cd_name desc  -->
<!--         limit #{startRow}, #{pageSize}   	 -->
<!--     </select> -->
    
<!--     <select id="getProductCount" resultType="java.lang.Integer"> -->
<!--         select count(*) from product  -->
<!--         <if test="search != null"> -->
<!--         <if test="select != null"> -->
<!-- 			<if test="select == 'product_dv'.toString()"> -->
<!-- 				where product_dv like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
<!-- 			<if test="select == 'product_cd_name'.toString()"> -->
<!-- 				where product_cd_name like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
<!-- 			<if test="select == 'product_name'.toString()"> -->
<!-- 				where product_name like CONCAT('%',#{search},'%') -->
<!-- 			</if> -->
<!--         </if> -->
<!--         </if> -->
<!--     </select> -->
    
<!--     <delete id="deleteProduct"> -->
<!--     	delete from product -->
<!--     	where product_cd_name = #{product_cd_name} -->
<!--     </delete> -->
    
<!--     <select id="getProduct" resultType="com.itwillbs.domain.ProductDTO"> -->
<!--         select * from product -->
<!--         where product_cd_name = #{product_cd_name} -->
<!--     </select> -->

<!--     <update id="updateProduct"> -->
<!--     	update product set product_dv = #{product_dv}, product_name = #{product_name}, business_cd = #{business_cd}, product_size = #{product_size}, product_unit = #{product_unit}, remarks = #{remarks} -->
<!--     	where product_cd_name = #{product_cd_name}    -->
<!--     </update> -->
    

    
</mapper>



